These exercises are designed to test your understanding and capabilities in what we have covered so far. As such, they will take time to complete.

Create an application that will first generate 10 million random numbers and store them in a vector. Your task is now to find the maximum and minimum values in the vector. As with Monte Carlo π, time the application using different thread configurations. You should also determine some method to store the maximum and minimum values and thus display it. As your first run will use one thread you can test that each different configuration returns the correct maximum and minimum.
Write an application that will multiply a matrix of dimensions 1000 * 1000 by a vector with 1000 components. If you do not remember how we perform a matrix-vector multiplication, remember that each component of the resulting 1000 component vector is calculated as follows (assuming 0-indexing):
           Matrix Multiply Equation

           If you are unsure about how to do the calculation then do some research into matrix multiplication.

Modify the Monte Carlo π test to use a λ expression instead. This is relatively easy once you understand λ expressions. Again, gather timing data as before and see if there is any difference in performance.
Some of the timings you are gathering will sometimes come out at 0ms. A possible solution is the high_resolution_clock and taking the timings in microseconds (abbreviated μs). Change the Monte Carlo π application to use these techniques to get a finer grained analysis.